всем привет я евгений ковальчук вы на

канале в pdf и это второй выпуск видео

каста фронт-энд вопросы на собеседовании

в котором я постараюсь подробно и просто

ответить на самые часто задаваемые

технические вопросы собеседований однако

прежде чем мы начнем хочу напомнить что

у видео каста есть гид хоп репозиторий

где все вопросы разбиты под схемам и у

каждого есть необходимый timeline

поэтому вы можете быстро освежить в

памяти проблемную тему или повторить то

что забыли не забывайте оставлять в

комментариях под видео вопросы которые

получали на собеседовании именно вы

поехали начинаем с html

что такое валидация и какие типы

проверок html-документа вы знаете

validation эта проверка документа

специальной программой валидатора на

соответствие установленным web

стандартом и обнаружение существующих

ошибок эти стандарты называются

спецификациями разработаны они

консорциумом world elite web или

сокращенно w тряси

а работа валидатора заключается в

следующем сначала определяется тип

документа который указывается с помощью

док type затем проверяется html код на

правильность и отсутствие ошибок при

этом также проверяется правильность

использование имен тегов и их

вложенности основные четыре типа

проверки это проверка синтаксиса

проверка вложенности тегов проверка дети

идей или document type definitions

и проверка на наличие посторонних

элементов или тегов какой так

использовать для того чтобы сверстать

кнопку несмотря на то что вопрос кажется

элементарным в нем есть подвох и самый

правильный ответ на него это тоже вопрос

а какую именно кнопку нужно сделать и

уже здесь вы получаете либо уточнение

контекста

либо вас попросят рассказать все

варианты первый случай

это обычная кнопка функциональность

которой может быть добавлено через java

script верстается она бегом батон иногда

с атрибутом type батон

второй случай эта кнопка подтверждение

формы в этом случае используется либо

батон с admit либо

inputs admit третий вариант это

использование тега input с атрибутом

type батон это немного устаревающий но

по-прежнему актуальный кейс и

заключительный эта кнопка ссылка здесь

нам уже нужно использовать так эй и

стиле zerowatt полученную ссылку под

кнопку с помощью css стилей что такое

онлайновый стиль можно ли его

переопределить онлайновый стиль это

стиль примененный к определенному

элементу указывается он непосредственно

в html файле а добавляется натик с

помощью атрибута style

с указанием требуемых стилей

переопределить его можно только с

помощью директивы импотент которую можно

добавлять на css свойства есть ли у

html-элементов свои дефолтные

специфичные стиле да практически каждый

html элемент обладает своим набором

индивидуальных стилей

у заголовках это увеличение размера о

ступай и жирность у списков

это маркеры или цифры даже у параграфа

появляются дополнительные марджан а

некоторые теги такие как например би ай

эс ти ти

вообще предназначены только для

визуального изменения контента нюанс

заключается в том что данные дефолтные

стили отличаются в разных браузерах

поэтому для того чтобы верстка была

одинакова во всех браузерах

это называется кроссбраузерность

используется либо normal айс для

усреднения стилей либо reset для полного

сброса для какого тега

используется атрибут alt и зачем он

нужен атрибут alt или альтернативный

текст

добавляется для тега картинки то есть

m&g

он нужен для того чтобы в случае если

картинка не отображается на странице а

это может произойти вследствие ошибки

разработки или отказа используемого

сервиса вместо неё

отображался поясняющий или

альтернативный текст данный атрибут

во-первых является обязательным и любой

валидатор выдаст ошибку

если его не добавить а во-вторых

использование альт атрибута улучшает

accessibility или доступной страницы так

как различные screen ридеры

при чтении веб-страницы зачитывают его в

результате пользователи с ограниченными

возможностями понимает контекст

используемого изображения переходим к

css что такое selector и какие селекторы

существуют селектор эта часть с с

правило которое сообщает браузеру какому

элементу или элементом веб-страницы

будет применен стиль после этого

селекторы можно спокойно перечислять

обычно никто не ждет что вы назовете

весь список но большим плюсом будет их

систематизировать все селекторы делятся

на две большие группы это простые и

составные простые это тип в котором

указывается один вариант селектора к ним

относятся класс айди так или тип

элемента

универсальный селектор эта звездочка и

селектор атрибута составной селектор это

селектор представляющий из себя

определенную комбинацию простых

разделенных или пробелом или комбинатора

это специальный символ между с и

лекторами к ним относятся групповые

селекторы то есть перечисленные через

запятую селектор потомка без разделения

указывается вся цепочка селектор только

дочернего элемента

это со знаком больше также к ним можно

отнести селектор псевдо-класса

и псевдо-элементы и так далее как было

сказано

их много но называть все сходу не

обязательно что такое специфичности

лектора как считать вес селектора

специфичность это способ с помощью

которого браузер и определяет какие

значения s и свойств будут применены к

элементу все дело в том что на одном

элементе может быть определена сразу

несколько стилей

а вот какие именно стиле будут

отображены в браузере

зависит от специфичности которые

базируются на определение веса селектора

есть четыре основных веса селектора это

онлайновый самый тяжелый его вес равен

1000 айди вес данного селектора

равняется 100 класс атрибут и

псевдо-класс вес каждого равен 10 и

заключительная это вес элемента или

псевдо-элемент а они равны единице на

экране вы можете видеть две таблицы

каждый обозначает эти веса просто в

одной значение определены цифрами

а во второй описано соотношение каждого

уровня просто выбирайте какой из

вариантов понятнее вам и запоминайте его

но для того чтобы просчитать вес и

лектора достаточно просуммировать все

входящие в него элементы если это один

тег то вес 1 если два тега а вес 2

если а иди и класс то вес 110 и так

далее такие просчеты

нужны для того чтобы писать максимально

чистый css код без постоянного

использования impudent

разница между реза it in normal life

практически все html элементы обладают

дефолтным и стилями

это внутренние и внешние отступы размер

и жирный шрифт а наличие меток и так

далее не он заключается в том что каждый

браузер применяют различные стили и для

того чтобы верстка в каждом выглядела

одинаково прежде чем начать ее делать

используя два подхода это грозит и

normal айс по сути это css-файл которые

подключаются в самом начале документа и

либо сбрасывает все дефолтные стиле в

ноль либо нормализирует стабилизирует их

для различных браузеров то есть сохраняя

дефолтные стиле

делает их одинаковыми наглядно разницу в

работе вы можете видеть на слайде

недостатком сброса стилей является то

что частично их придется устанавливать

заново выбирать между двумя

инструментами стоит в зависимости от

поставленной задачи однако наиболее

актуальный вариант сейчас это применение

normal айс переходим java-script разница

между нал и андройд обозначения

обозначают отсутствующие данные только

анды fine представляет собой значение по

умолчанию для переменной которые еще не

была присвоена никакого другого значения

то есть она была не определена функции

которая ничего не возвращает явно и

несуществующего свойства объекта если

обобщить то данное значение

присваивается автоматически

интерпретатором момент выполнения

скрипта

что же касается нал это явное задание

отсутствующего значения то есть когда

разработчик самостоятельно определяет

отсутствие каких-либо данных

что такое поднятие хостинг

хостинг или поднятие переменных это

механизм подъема функций или переменной

глобальную

или функциональную область видимости это

является особенностью самого движка

java-script джесс сначала объявляет а

уже затем инициализирует наша переменная

а это значит чтоб переменным объявленным

через war а также к функциям

определенным как фаршем declaration

можно получить доступ

еще до объявления значения на слайде при

использовании war и обращение к

переменной эй до присвоения мы получаем

просто анды fine в с6

стало возможно объявлять переменные

через лет и const

и вот в отличие от war эти переменные не

всплывают

и вместо ан define мы уже получаем

ошибку reference р

что же касается функций все объявления

фаршем declaration

могут спокойно идти в конце документа

обращаться к ним мы можем абсолютно в

любом месте скрипта операторы и

и или в java script есть три логических

операторов это

и обозначается двойным амперсанд ам или

обозначается двумя вертикальными чертами

и логическое отрицание

не который обозначается восклицательным

знаком если говорить об и он находит и

возвращает первое ложное значение либо

последний операнд когда все значения

истинные или просто находит и возвращает

первое истинное значение оба оператора

используют короткое замыкание во

избежание лишних затрат

другими словами как только находится

подходящее значение дальнейшая проверка

не выполняется на примерах это очень

хорошо видно первая консоль как только

натыкается на фолс возвращает значение 2

проходит число проходит пустой объект

так как эта истина и возвращает строку

так как это заключительное значение в

цепочке

последнем варианте проходит true но уже

на нал спотыкается и возвращает это

значение

с консолями оператора или также все

просто как только в цепочке находится

первое

истинное значение она возвращается типы

таймеров в java script java-script есть

два основных типа таймеров и to set time

out позволяет вызывать

переданную функцию один раз по истечению

определенного времени и сет интервал

позволяет вызывать функцию постоянно

через определенный промежуток времени

оба таймера принимая два значения это

непосредственно функция которая будет

выполнена и время дополнительно следует

отметить что оба таймера возвращает

идентификатор

данный идентификатор может быть присвоен

в переменную

после чего переменную можно передать в

одну из функций

clear тайм-аут или clear интервал clear

тайм-аут позволяет остановить

set time out еще до момента вызова кейс

не очень частой так как по сути несмотря

на созданный таймер он ни разу не

вызовет переданную функцию так как еще

до момента вызова функции мы отменили

таймер и результат работы кода мы никак

не увидим что же касается clear интервал

то это единственный способ как можно

остановить сет интервал если это не

выполнить то таймер будет работать все

время пока страница открыта в браузере и

в заключении практическая задача вам

нужно создать функцию которая будет

принимать предложения и возвращать из

него первое самое короткое слово создаем

функцию и называемые fine short

принимать она будет строку

как говорилось ранее если предстоит

работа со строками

то скорее всего их нужно преобразовывать

в массив и первым же шагом мы это и

делаем в метод сплит мы передаем

правельный символ это нужно для того

чтобы получаемое предложение разбить по

словам они по символам

далее полученный массив нам нужно

отсортировать по возрастанию

используемый метод сорт а за основу

берем длину каждого слова в предложении

заключительным действием мы возвращаем

первый элемент сортированная массива он

же

и будет самым коротким два других

варианта это просто более продвинутая

реализация в одной из которых мы

используем цепочку методов опуская

присвоение промежуточных результатов

переменная а в другой дополнительно

используем синтаксис ис-6 в целом на

сегодня это все обязательно

подписывайтесь на канал и жмите

колокольчик чтобы не пропустить

следующие выпуски а также не забывайте

отблагодарить мои старания лайка

увидимся в новом видео пока

